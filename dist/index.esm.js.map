{"version":3,"file":"index.esm.js","sources":["../src/useMultipleState.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\nconst useMultipleState = (initialStates) => {\r\n  const [states, setStates] = useState(initialStates)\r\n\r\n  const getStateManager = (key) => {\r\n    const methods = {\r\n      get: () => (key ? states[key] : { ...states }),\r\n      put: (valueOrUpdater, callback) => {\r\n        setStates((prev) => {\r\n          if (key) {\r\n            const currentValue = prev[key]\r\n            let newValue\r\n            if (typeof valueOrUpdater === 'function') {\r\n              newValue = valueOrUpdater(currentValue)\r\n            } else if (\r\n              typeof currentValue === 'object' &&\r\n              currentValue !== null &&\r\n              typeof valueOrUpdater === 'object' &&\r\n              valueOrUpdater !== null\r\n            ) {\r\n              // Mezclar objetos\r\n              newValue = { ...currentValue, ...valueOrUpdater }\r\n            } else {\r\n              newValue = valueOrUpdater\r\n            }\r\n            const result = {\r\n              ...prev,\r\n              [key]: newValue,\r\n            }\r\n            if (callback) callback(result[key]) // Ejecutar callback con el nuevo valor\r\n            return result\r\n          } else {\r\n            // Actualizar múltiples claves\r\n            if (\r\n              typeof valueOrUpdater !== 'object' ||\r\n              valueOrUpdater === null\r\n            ) {\r\n              throw new Error(\r\n                'Para actualizar todo el estado, debe proporcionarse un objeto o Clave de objeto para actualizar una especifica.'\r\n              )\r\n            }\r\n\r\n            const validUpdates = Object.keys(valueOrUpdater).reduce(\r\n              (result, updateKey) => {\r\n                if (updateKey in prev) {\r\n                  result[updateKey] = valueOrUpdater[updateKey]\r\n                }\r\n                return result\r\n              },\r\n              {}\r\n            )\r\n            return {\r\n              ...prev,\r\n              ...validUpdates,\r\n            }\r\n          }\r\n        })\r\n      },\r\n    }\r\n    return new Proxy(methods, {\r\n      get (target, prop) {\r\n        if (prop in target) {\r\n          return target[prop]\r\n        }\r\n        // Si no se llama un método, devuelve directamente el valor\r\n        if (prop === Symbol.toPrimitive || prop === 'valueOf') {\r\n          return () => target.get()\r\n        }\r\n        return target.get()\r\n      },\r\n      apply (target, thisArg, args) {\r\n        return target.get() // Devuelve el valor por defecto si se usa como función\r\n      },\r\n    })\r\n  }\r\n\r\n  const getAll = (keys) => {\r\n    if (!keys) {\r\n      return { ...states }\r\n    }\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('La entrada a getAll debe ser un array de claves.')\r\n    }\r\n    return keys.reduce((result, key) => {\r\n      if (key in states) {\r\n        result[key] = states[key]\r\n      } else {\r\n        throw new Error(`El estado con clave \"${key}\" no existe.`)\r\n      }\r\n      return result\r\n    }, {})\r\n  }\r\n  const state = (key) => {\r\n    if (key && !(key in states)) {\r\n      throw new Error(`El estado con clave \"${key}\" no existe.`)\r\n    }\r\n    return getStateManager(key)\r\n  }\r\n\r\n  return {\r\n    state,\r\n    getAll,\r\n  }\r\n}\r\n\r\nexport default useMultipleState\r\n\r\n// Comandos relevantes:\r\n// - Para construir el proyecto: npm run build\r\n// - Para ejecutar tests: npm jest\r\n// - Para publicar: npm publish"],"names":["useMultipleState","initialStates","_useState","useState","_useState2","_slicedToArray","states","setStates","getStateManager","key","methods","get","_objectSpread","put","valueOrUpdater","callback","prev","currentValue","newValue","_typeof","result","_defineProperty","Error","validUpdates","Object","keys","reduce","updateKey","Proxy","target","prop","Symbol","toPrimitive","apply","thisArg","args","getAll","Array","isArray","concat","state"],"mappings":"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"}